'use strict';

const fs = require('fs');
const fetch = require('node-fetch');
const xml2js = require('xml2js');
const chalk = require('chalk');

function parseTextNode(arr) {
  return arr.join('').trim();
}

function makeRequest(url) {
  fetch(url, {method: 'POST'}).then(res => res.json()).then(json => {
    if (json.validSpecs && json.invalidSpecs) {
      json.validSpecs.forEach(spec => console.log(chalk.green(`${spec.specName}`)));
      json.invalidSpecs.forEach(spec => console.log(chalk.red(`${spec.specName}`)));
      console.log(`found ${chalk.green(json.validSpecs.length)} valid specs and ${chalk.red(json.invalidSpecs.length)} invalid specs`);
    } else {
      console.log(chalk.red(json.errorDescription || JSON.stringify(json, null, 2)));
    }
  }).catch(err => console.log(chalk.red(err)));
}

const hostDefaultDomainName = 'app-ci-jvm0a.42';
const hostDefaultSubDomainName = '.wixprod.net';

module.exports = function (options) {
  fs.readFile(options.pom, (err, data) => {
    if (err) {
      console.log(err);
      console.log('please make sure you run this command from the root directory of the artifact');
    } else {
      const parser = new xml2js.Parser();
      parser.parseString(data, (err, result) => {
        if (err) {
          console.log(err);
          console.log('please make sure your pom.xml is valid');
        } else {

          const host = options.host || ((options.staging || hostDefaultDomainName) + hostDefaultSubDomainName);
          const groupId = parseTextNode(result.project.groupId);
          const artifactId = parseTextNode(result.project.artifactId);
          const version = options.version || parseTextNode(result.project.version);

          if (!version || !version.match(/^\d+\.\d+\.\d+(-SNAPSHOT)?$/)) {
            console.log('invalid version:', version);
          } else {
            console.log('Updating experiments for:');
            console.log('  host:      ', host);
            console.log('  groupId:   ', groupId);
            console.log('  artifactId:', artifactId);
            console.log('  version:   ', version);
            console.log('');
            makeRequest(`http://${host}:27804/wix-petri-specs-feeder-webapp/api/v1/artifacts/${groupId}/${artifactId}/${version}.`);
          }
        }
      });
    }
  });
};
