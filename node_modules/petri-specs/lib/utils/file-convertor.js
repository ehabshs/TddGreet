function convertScope(spec) {
  const newSpecMap = {};
  Object.keys(spec).forEach(specName => {
    const specObj = Object.assign({}, spec[specName]);
    if (specObj.scope) {
      specObj.scopes = [specObj.scope];
      delete specObj.scope;
    }

    Object.assign(newSpecMap, {[specName]: specObj});
  });

  return newSpecMap;
}

function convertTestGroups(spec) {
  const newSpecMap = {};
  Object.keys(spec).forEach(specName => {
    const specObj = Object.assign({}, spec[specName]);

    if (specObj.testGroups && specObj.testGroups.length !== 1) {
      specObj.controlGroup = specObj.testGroups[0] || '';
      specObj.variants = specObj.testGroups.slice(1);
      delete specObj.testGroups;
    }

    Object.assign(newSpecMap, {[specName]: specObj});
  });

  return newSpecMap;
}

module.exports = function (spec) {
  return convertScope(convertTestGroups(spec));
};
