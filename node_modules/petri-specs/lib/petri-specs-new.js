'use strict';

const path = require('path');
const shell = require('shelljs');
const inquirer = require('inquirer');
const ConfigStore = require('configstore');
const packageName = require('../package').name;
const writeFile = require('./utils/file-write-logger');

const conf = new ConfigStore(packageName);
const STORAGE_SETTINGS_KEY = 'new_spec_defaults';

function getGitConfigValue(cmd) {
  let result = null;
  if (shell.which('git')) {
    result = shell.exec('git config --get ' + cmd, {
      silent: true
    }).stdout.trim();
  }
  return result;
}

const promptsDefaults = conf.get(STORAGE_SETTINGS_KEY) || {
  owner: getGitConfigValue('user.email') || 'john.doe@wix.com',
  scope: 'my-account',
  onlyForLoggedInUsers: true,
};

const promptForSpecName = {
  type: 'input',
  name: 'spec',
  message: 'Spec Name',
  validate: value => {
    if (!value.match(/^specs(\.[a-z][a-zA-Z-_]*)?\.[A-Z][a-zA-Z0-9-_]*$/)) {
      return 'Must match pattern specs.myNamespace.MySpecName';
    } else {
      return true;
    }
  },
};

const promptForScopeName = {
  type: 'input',
  name: 'scope',
  message: 'Scope Name',
  default: promptsDefaults.scope,
};

const promptForEmail = {
  input: 'input',
  name: 'owner',
  message: 'Owner email',
  default: promptsDefaults.owner,
};

const promptForScopeType = {
  type: 'list',
  name: 'onlyForLoggedInUsers',
  message: 'Scope Type',
  choices: [{
    name: 'Only for logged in users',
    value: true
  }, {
    name: 'All user types',
    value: false
  }],
  default: promptsDefaults.onlyForLoggedInUsers ? 0 : 1,
};

module.exports = function (options) {
  inquirer.prompt([promptForSpecName, promptForScopeName, promptForEmail, promptForScopeType])
    .then(answers => {
      const spec = answers.spec;
      delete answers.spec;
      answers.scopes = [answers.scope];
      delete answers.scope;
      const output = {
        [spec]: Object.assign(answers, {
          controlGroup: 'false',
          variants: ['true']
        })
      };
      const specFile = path.join(options.directory, spec + '.json');

      writeFile(specFile, JSON.stringify(output, null, 2));
      if (shell.which('git')) {
        shell.exec('git add ' + specFile, {
          silent: true
        });
      }
      conf.set(STORAGE_SETTINGS_KEY, answers);
    }).catch(e => console.error(e));
};
