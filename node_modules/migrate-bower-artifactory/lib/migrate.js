var utils = require('./utils');

var oldRegistry = 'mirror.wixpress.com';
var newRegistry = 'https://bower.dev.wixpress.com';
var artifactoryResolver = 'bower-art-resolver';

function migrate() {
  var patchBowerSuccessfully = patchBower();
  if (patchBowerSuccessfully) {
    patchPackageJSON();
    console.log('please commit the changed files');
  }
}

function patchBower() {
  var bowerrc = getBowerrc();
  if (bowerrc && shouldPatchBower(bowerrc)) {
    console.log('bower artifactory migration tool (https://github.com/wix-private/migrate-bower-artifactory)');
    console.log('patching .bowerrc file to new bower artifactory');
    bowerrc.registry = newRegistry;
    if (bowerrc.resolvers) {
      bowerrc.resolvers.push(artifactoryResolver)
    } else {
      bowerrc.resolvers = [artifactoryResolver];
    }
    utils.writeJSON('.bowerrc', bowerrc);
    return true;
  }
}

function getBowerrc() {
  try {
    return utils.readJSON('.bowerrc');
  } catch (e) {
    return null;
  }
}

function shouldPatchBower(bowerrc) {
  var registry = bowerrc.registry;
  switch (typeof registry) {
    case 'object' :
      return (registry.register && registry.register.match(oldRegistry)) ||
        (registry.publish && registry.publish.match(oldRegistry)) ||
        (registry.search && Array.isArray(registry.search) ? utils.isInArray(registry.search, oldRegistry) : registry.search.match(oldRegistry));
    case 'string' :
      return registry.match(oldRegistry);
    default:
      return false;
  }
}

function patchPackageJSON() {
  var pj = getPackagejson();
  if (pj) {
    pj.devDependencies = pj.devDependencies || {};
    if (!pj.devDependencies['bower-art-resolver']) {
      console.log('patching package.json to include bower artifactory dependency');
      pj.devDependencies['bower-art-resolver'] = '^2.0.9';
      utils.writeJSON('package.json', pj)
    }
  } else {
    console.log(`Warning: could not find package.json. Please run npm install -D ${artifactoryResolver} manually`);
  }
}


function getPackagejson() {
  try {
    return utils.readJSON('package.json');
  } catch (e) {
    return null;
  }
}

module.exports = migrate;
